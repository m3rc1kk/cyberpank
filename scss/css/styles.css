@charset "UTF-8";
/**
  Нормализация блочной модели
 */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями
 */
img {
  display: block;
  max-width: 100%;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
}

/**
  Плавный скролл
 */
html,
:has(:target) {
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
  Приводим к единому цвету svg-элементы
 */
svg *[fill] {
  fill: currentColor;
}

svg *[stroke] {
  stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
.container {
  max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
  padding-inline: var(--container-padding-x);
  margin-inline: auto;
}

:root {
  --color-dark: #000000;
  --color-gray: #777777;
  --color-blue: #52BEDC;
  --color-yellow: #F8F200;
  --color-light: #FFFFFF;
  --border: 1px dashed var(--color-gray);
  --border-bottom: 1px solid var(--color-gray);
  --border-padding-bottom: 13px;
  --button-padding: 12px 50px;
  --font-family-base: "Roboto", sans-serif;
  --font-family-alt: "Archangelsk", sans-serif;
  --container-width: 1280px;
  --container-padding-x: 12px;
  --transition-duration: .2s;
}

body {
  font-family: var(--font-family-base);
  font-weight: 400;
  font-size: 18px;
  line-height: normal;
  color: var(--color-light);
}

a,
button,
textarea,
input,
svg * {
  transition-duration: var(--transition-duration);
}

a {
  text-decoration: none;
}

h1, h2, h3, h4, h5, h6 {
  font-weight: 400;
}

@font-face {
  font-family: "Roboto";
  src: url("../fonts/Roboto-Light.woff2") format("woff2");
  font-weight: 300;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Roboto";
  src: url("../fonts/Roboto-Regular.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Roboto";
  src: url("../fonts/Roboto-Bold.woff2") format("woff2");
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Archangelsk";
  src: url("../fonts/Archangelsk.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
.header {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
}
.header__inner {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding-top: 20px;
}
.header__social-list {
  display: flex;
  align-items: center;
  -moz-column-gap: 40px;
       column-gap: 40px;
}
.header__social-item:hover {
  opacity: 0.7;
}

.hero {
  min-height: 1000px;
  background-image: url("../../images/Hero/1.jpg");
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
}
.hero__inner {
  height: 1000px;
  display: flex;
  align-items: flex-end;
  justify-content: flex-end;
}
.hero__body {
  display: flex;
  flex-direction: column;
  row-gap: 25px;
  align-items: start;
  padding: 70px;
  background-color: var(--color-yellow);
  color: var(--color-dark);
}
.hero__title {
  font-family: var(--font-family-alt);
  font-size: 62px;
  max-width: 484px;
}

.button {
  background-color: var(--color-dark);
  color: var(--color-yellow);
  padding: 19px 50px;
  font-size: 24px;
  font-weight: 700;
  border: 0;
}
.button:hover {
  background-color: var(--color-light);
  color: var(--color-dark);
}/*# sourceMappingURL=styles.css.map */